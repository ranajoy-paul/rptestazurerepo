kafkabootstrapservers: broker-3-8vn3c5nvpplm9n8f.kafka.svc05.us-south.eventstreams.cloud.ibm.com:9093,broker-5-8vn3c5nvpplm9n8f.kafka.svc05.us-south.eventstreams.cloud.ibm.com:9093,broker-4-8vn3c5nvpplm9n8f.kafka.svc05.us-south.eventstreams.cloud.ibm.com:9093,broker-1-8vn3c5nvpplm9n8f.kafka.svc05.us-south.eventstreams.cloud.ibm.com:9093,broker-0-8vn3c5nvpplm9n8f.kafka.svc05.us-south.eventstreams.cloud.ibm.com:9093,broker-2-8vn3c5nvpplm9n8f.kafka.svc05.us-south.eventstreams.cloud.ibm.com:9093

businessValidityDuration: 180
server:
  port: 8081
data:
  path: file:C:\workspacecloud\data\
kafka:
  bootstrap-servers: ${kafkabootstrapservers}
  clientId: hbp-update-berth-plan-producer-service
  username: token
  password: 8ohlnRUKteFhqX8MZipWlJj_6wUklb9WMRBT5g2A2CE7
  command:
    submission:
      topic: APMM.berthPlanning.dischargeListEventsGroup.confidential.dedicated.topic.v1
spring:
  main:
    # Mode used to display the banner when the application runs. Can be CONSOLE, LOG or OFF.
    # See: https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/Banner.Mode.html
    banner-mode: CONSOLE
#  banner:
    # Banner text resource location, below file is provided.
#    location: banner.txt
  jackson:
    # Controls the inclusion of properties during serialization.
    default-property-inclusion: non_null
  application:
    annotated-exception-handlers:
      enabled: true
    # Application name
    name: HbpUpdateBerthPlanProducer

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
      group:
        liveness:
          include: diskSpace,ping
          show-details: always
  metrics:
    distribution:
      percentiles[http.server.requests]: 0.90,0.95,0.99
  info:
    git:
      mode: full
